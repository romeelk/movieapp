# This is a basic workflow to help you get started with Actions

name: Movie app CI build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lintweb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    defaults:
     run:
      shell: bash
      working-directory: ./src/web
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python environment
      uses: actions/setup-python@v1
      with:
          python-version: "3.8"
    - name: flake8 Lint
      uses: py-actions/flake8@v1
      with:
          max-line-length: "240"
          path: "src"

  lintapi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    defaults:
     run:
      shell: bash
      working-directory: ./src/api
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python environment
      uses: actions/setup-python@v1
      with:
          python-version: "3.8"
    - name: Lint with flake8
      uses: py-actions/flake8@v1
      with:
          max-line-length: "240"
          path: "src"


  # This workflow contains a single job called "build"
  buildmovieweb:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_PAT_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./src/web
          file: ./src/web/Dockerfile
          push: true
          tags: romeelk/movieweb:latest


